[
  {
    "objectID": "Lab-2.html",
    "href": "Lab-2.html",
    "title": "Minnesota Tree Growth Data",
    "section": "",
    "text": "Code\ntree_data &lt;- read.csv(\"/Users/Avery/github/Lab_2_tree_growth_data/data/doi_10_5061_dryad_18pm5__v20170130/Itter_et_al_EAP16-0589.R1/tree_dat.csv\")\nhead(tree_data)\n\n\n  treeID standID stand year species age   inc   rad_ib\n1      1       1    A1 1960    ABBA   1 0.930 10.78145\n2      1       1    A1 1961    ABBA   2 0.950 11.73145\n3      1       1    A1 1962    ABBA   3 0.985 12.71645\n4      1       1    A1 1963    ABBA   4 0.985 13.70145\n5      1       1    A1 1964    ABBA   5 0.715 14.41645\n6      1       1    A1 1965    ABBA   6 0.840 15.25645\n\n\n\nQuestion 1: Use glimpse to understand the structure and names of the dataset. Decribe the structure and what you see in the dataset?\n\n\nCode\nlibrary(dplyr)\nglimpse(tree_data)\n\n\nRows: 131,386\nColumns: 8\n$ treeID  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ standID &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ stand   &lt;chr&gt; \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A…\n$ year    &lt;int&gt; 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 19…\n$ species &lt;chr&gt; \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\"…\n$ age     &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n$ inc     &lt;dbl&gt; 0.930, 0.950, 0.985, 0.985, 0.715, 0.840, 0.685, 0.940, 1.165,…\n$ rad_ib  &lt;dbl&gt; 10.78145, 11.73145, 12.71645, 13.70145, 14.41645, 15.25645, 15…\n\n\nThe dataset is made up of 131,386 rows and 8 variable columns. The 8 variables names are treeID, standID, stand, year, species, age, inc, rad_ib\n\n\nQuestion 2: How many records have been made in stand 1?\n\n\nCode\nstand_1 &lt;- filter(tree_data, standID == 1)\n\n\n979 records have been made in stand 1\n\n\nQuestion 3: How many records of the Abies balsamea and Pinus strobus species have been made?\n\n\nCode\nnumber_of_ABBA_and_PIST &lt;- filter(tree_data, species == \"ABBA\" | species == \"PIST\")\n\n\n17,221 records of the Abies balsamea and Pinus strobus species have been made\n\n\nQuestion 4: How many trees are older then 200 years old in the last year of the dataset?\n\n\nCode\ntrees_200_old &lt;- filter(tree_data, age &gt; 200, year == 2007)\n\n\nIn 2007, the last year of the dataset, 7 trees are older then 200 years old ### Question 5: What is the oldest tree in the dataset found using slice_max?\n\n\nCode\nslice_max(tree_data, age, n = 1)\n\n\n  treeID standID stand year species age  inc rad_ib\n1     24       2    A2 2007    PIRE 269 0.37 308.84\n\n\nThe oldest tree in the dataset is 269 years old\n\n\nQuestion 6: Find the oldest 5 trees recorded in 2001. Use the help docs to understand optional parameters\n\n\nCode\ntree_data |&gt;\n  filter(year == 2001) |&gt;\n  arrange(desc(age)) |&gt;\n  slice_head(n = 5)\n\n\n  treeID standID stand year species age   inc  rad_ib\n1     24       2    A2 2001    PIRE 263 0.210 306.880\n2     25       2    A2 2001    PIRE 259 0.280 156.210\n3   1595      24    F1 2001    FRNI 212 0.579 156.267\n4   1598      24    F1 2001    FRNI 206 0.394 130.251\n5   1712      26    F3 2001    FRNI 206 0.168 154.354\n\n\n\n\nQuestion 7: Using slice_sample, how many trees are in a 30% sample of those recorded in 2002?\n\n\nCode\ntrees_in_30 &lt;- tree_data |&gt;\n  filter(year == 2002) |&gt;\n  slice_sample(prop = 0.3)\n\n\n687 trees are in a 30% sample of those recorded in 2002\n\n\nQuestion 8: Filter all trees in stand 5 in 2007. Sort this subset by descending radius at breast height (rad_ib) and use slice_head() to get the top three trees. Report the tree IDs\n\n\nCode\ntree_data |&gt;\n  filter(standID == 5, year == 2007) |&gt;\n  arrange(desc(rad_ib)) |&gt;\n  slice_head(n = 3)\n\n\n  treeID standID stand year species age   inc   rad_ib\n1    128       5    A6 2007    PIST  82 0.885 238.8850\n2    157       5    A6 2007    PIRE  85 0.900 217.8700\n3    135       5    A6 2007    PIMA  84 0.110 210.1874\n\n\nThe tree IDs are: 128, 157, 135\n\n\nQuestion 9: Reduce your full data.frame to [treeID, stand, year, and radius at breast height]. Filter to only those in stand 3 with records from 2007, and use slice_min to pull the smallest three trees meaured that year.\n\n\nCode\ntree_data |&gt;\n  select(treeID, standID, year, rad_ib) |&gt;\n  filter(standID == 3, year == 2007) |&gt;\n  slice_min(rad_ib, n = 3)\n\n\n  treeID standID year rad_ib\n1     50       3 2007 47.396\n2     56       3 2007 48.440\n3     36       3 2007 54.925\n\n\n\n\nQuestion 10: Use select to remove the stand column. Use glimspe to show the dataset.\n\n\nCode\ntree_data |&gt;\n  select(! stand) |&gt;\n  glimpse()\n\n\nRows: 131,386\nColumns: 7\n$ treeID  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ standID &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ year    &lt;int&gt; 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 19…\n$ species &lt;chr&gt; \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\"…\n$ age     &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…\n$ inc     &lt;dbl&gt; 0.930, 0.950, 0.985, 0.985, 0.715, 0.840, 0.685, 0.940, 1.165,…\n$ rad_ib  &lt;dbl&gt; 10.78145, 11.73145, 12.71645, 13.70145, 14.41645, 15.25645, 15…\n\n\n\n\nQuestion 11: Look at the help document for dplyr::select and examine the “Overview of selection features”. Identify an option (there are multiple) that would help select all columns with the string “ID” in the name. Using glimpse to view the remaining dataset\n\n\nCode\ntree_data |&gt;\n  select(contains(\"ID\")) |&gt;\n  glimpse()\n\n\nRows: 131,386\nColumns: 2\n$ treeID  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ standID &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n\n\n\n\nQuestion 12: Find a selection pattern that captures all columns with either ‘ID’ or ‘stand’ in the name. Use glimpse to verify the selection.\n\n\nCode\ntree_data |&gt;\n  select(contains(\"ID\") | contains(\"stand\")) |&gt;\n  glimpse()\n\n\nRows: 131,386\nColumns: 3\n$ treeID  &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ standID &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ stand   &lt;chr&gt; \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A…\n\n\n\n\nQuestion 13: Looking back at the data dictionary, rename rad_inc and inc to include _[unit] in the name. Unlike earlier options, be sure that this renaming is permanent, and stays with your data.frame (e.g. &lt;-). Use glimpse to view your new data.frame.\n\n\nCode\ntree_data_unit &lt;- tree_data |&gt;\n  rename(rad_ib_mm = rad_ib, inc_mm = inc) |&gt;\n  glimpse()\n\n\nRows: 131,386\nColumns: 8\n$ treeID    &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ standID   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stand     &lt;chr&gt; \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", \"A1\", …\n$ year      &lt;int&gt; 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, …\n$ species   &lt;chr&gt; \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABBA\", \"ABB…\n$ age       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ inc_mm    &lt;dbl&gt; 0.930, 0.950, 0.985, 0.985, 0.715, 0.840, 0.685, 0.940, 1.16…\n$ rad_ib_mm &lt;dbl&gt; 10.78145, 11.73145, 12.71645, 13.70145, 14.41645, 15.25645, …\n\n\n\n\nQuestion 14: A key measurement in forestry in “basal area column”. The metric is computed with the formula:\n\n\nBA(m2) = 0.00007854⋅DBH^2 Where DBH is the diameter at breast height (cm). Use mutate to compute DBH in centimeters, and BA in m2 (HINT: Make sure rad_ib is in cm prior to computing the diameter!). What is the mean BA_m2 of the species POTR in 2007?\n\n\nCode\ntree_data_unit &lt;- tree_data_unit |&gt;\n  mutate(\n    rad_ib_cm = rad_ib_mm / 10,\n    DBH_cm = 2 * rad_ib_cm,\n    BA_m2 = 0.00007854 * DBH_cm^2\n  )\n\n\n\n\nCode\ntree_data_unit |&gt;\n  filter(species == \"POTR\", year == 2007) |&gt;\n  summarise(mean_BA_m2 = mean(BA_m2))\n\n\n  mean_BA_m2\n1 0.03696619\n\n\nIn 2007 the POTR species had a mean basal area of 0.03696619 m2\n\n\nQuestion 15: Lets say for the sake of our study, trees are not established until they are 5 years of age. Use if_else to add a boolean column to our dataset called established that is TRUE if the age is greater then 5 and FALSE if less then or equal to five. Once added, use count (see ?count) to determine how many records are from estabilshed trees?\n\n\nCode\ntree_data_unit &lt;- tree_data_unit |&gt;\n  mutate(\n    established = if_else(age &gt; 5, TRUE, FALSE)\n  )\n\n\n\n\nCode\ntree_data_unit |&gt;\n  count(established == TRUE)\n\n\n  established == TRUE      n\n1               FALSE   8883\n2                TRUE 122503\n\n\nThere are 122503 records from established trees\n\n\nQuestion 16: Use mutate and case_when to add a new column to you data.frame that classifies each tree into the proper DBH_class. Once done, limit your dataset to the year 2007 and report the number of each class with count.\n\n\nCode\ntree_data_unit &lt;- tree_data_unit |&gt;\n  mutate(DBH_class = case_when(\n    DBH_cm &gt; 0 & DBH_cm &lt;= 2.5 ~ \"seedling\",\n    DBH_cm &gt; 2.5 & DBH_cm &lt;= 10 ~ \"sapling\",\n    DBH_cm &gt; 10 & DBH_cm &lt;= 30 ~ \"pole\",\n    DBH_cm &gt; 30 ~ \"sawlog\"\n  ))\n\n\n\n\nCode\ntree_data_unit |&gt;\n  filter(year == 2007) |&gt;\n  count(DBH_class)\n\n\n  DBH_class    n\n1      pole 1963\n2   sapling  252\n3    sawlog   76\n\n\nIn 2007 there were 0 trees classified as seedlings, 252 trees classified as saplings, 1,963 trees classified as pole, and 76 trees classified as sawlog\n\n\nQuestion 17: Compute the mean DBH (in cm) and standard deviation of DBH (in cm) for all trees in 2007. Explain the values you found and their statistical meaning.\n\n\nCode\ntree_data_unit |&gt;\n  filter(year == 2007) |&gt;\n  summarise(\n    mean_DBH = mean(DBH_cm, na.rm = TRUE),\n    sd_DBH = sd(DBH_cm, na.rm = TRUE)\n  )\n\n\n  mean_DBH   sd_DBH\n1 16.09351 6.138643\n\n\nThe mean DBH is 16.09351, this value represents the average diameter at breast height of all the trees in the dataset for the year 2007. The standard deviation of DBH is 6.138643, this value indicates the variability in the DBH values for the trees in 2007. A high standard deviation means that the tree sizes vary widely from the mean, while a low standard deviation suggests that most trees are similar in size\n\n\nQuestion 18: Compute the per species mean tree age using only those ages recorded in 2003. Identify the three species with the oldest mean age.\n\n\nCode\ntree_data_unit |&gt;\n  filter(year == 2003) |&gt;\n  group_by(species) |&gt;\n  summarise(mean_age = mean(age, na.rm = TRUE)) |&gt;\n  arrange(desc(mean_age)) |&gt;\n  slice_head(n = 3)\n\n\n# A tibble: 3 × 2\n  species mean_age\n  &lt;chr&gt;      &lt;dbl&gt;\n1 THOC       127. \n2 FRNI        83.1\n3 PIST        73.3\n\n\nThe 3 species with the oldest mean age are THOC, FRNI, and PIST\n\n\nQuestion 19: In a single summarize call, find the number of unique years with records in the data set along with the first and last year recorded?\n\n\nCode\ntree_data_unit |&gt;\n  summarise(num_unique_years = n_distinct(year),\n    first_year = min(year),\n    last_year = max(year)\n  )\n\n\n  num_unique_years first_year last_year\n1              111       1897      2007\n\n\nThe number of unique years with records in the dataset is 111, with the first year recorded being 1897 and the last year recorded being 2007\n\n\nQuestion 20: Determine the stands with the largest number of unique years recorded. Report all stands with largest (or tied with the largest) temporal record.\n\n\nCode\nstand_unique_years &lt;- tree_data_unit |&gt;\n  group_by(standID) |&gt;\n  summarise(num_unique_years = n_distinct(year))\n\nsummarise(stand_unique_years, max_unique_years = max(num_unique_years))\n\n\n# A tibble: 1 × 1\n  max_unique_years\n             &lt;int&gt;\n1              111\n\n\nCode\nfilter(stand_unique_years, num_unique_years == 111)\n\n\n# A tibble: 5 × 2\n  standID num_unique_years\n    &lt;int&gt;            &lt;int&gt;\n1       1              111\n2      15              111\n3      16              111\n4      17              111\n5      24              111\n\n\nThe stands with the largest number of unique years recorded are 1, 15, 16, 17, and 24\n\n\nFinal question: We are interested in the annual DBH growth rate of each species through time, but we only want to include trees with at least a 10 year growth record. To identify this, we need to identify the per year growth made by each tree, there total growth record, and then average that, and compute the standard deviation, across the species.\n\n\nUse a combination of dplyr verbs to compute these values and report the 3 species with the fastest growth, and the 3 species with the slowest growth. (** You will need to use either lag() or diff() in your compuation. You can learn more about each in the Help pages)\n\n\nLastly, find and include an image of the fastest growing species. Add the image to your images directory.\n\n\nCode\ntree_data_growth &lt;- tree_data_unit |&gt;\n  arrange(treeID, year) |&gt;\n  group_by(treeID) |&gt;\n  mutate(annual_growth = DBH_cm - lag(DBH_cm)) |&gt;\n  filter(! is.na(annual_growth))\n\ntree_data_growth &lt;- tree_data_growth |&gt;\n  group_by(treeID, species) |&gt;\n  summarise(\n    total_years = n_distinct(year),\n    avg_growth = mean(annual_growth, na.rm = TRUE),\n    sd_growth = sd(annual_growth, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt;\n  filter(total_years &gt;= 10)\n\nspecies_growth_sum &lt;- tree_data_growth |&gt;\n  group_by(species) |&gt;\n  summarise(\n    avg_species_growth = mean(avg_growth, na.rm = TRUE),\n    sd_species_growth = mean(sd_growth, na.rm = TRUE)\n  ) |&gt;\n  arrange(desc(avg_species_growth))\n\nslice_head(species_growth_sum, n = 3)\n\n\n# A tibble: 3 × 3\n  species avg_species_growth sd_species_growth\n  &lt;chr&gt;                &lt;dbl&gt;             &lt;dbl&gt;\n1 PIRE                 0.417             0.191\n2 PIBA                 0.362             0.217\n3 POTR                 0.351             0.170\n\n\nCode\nslice_tail(species_growth_sum, n = 3)\n\n\n# A tibble: 3 × 3\n  species avg_species_growth sd_species_growth\n  &lt;chr&gt;                &lt;dbl&gt;             &lt;dbl&gt;\n1 QURU                 0.177            0.0688\n2 LALA                 0.172            0.0962\n3 THOC                 0.154            0.0674\n\n\nThe 3 species with the fastest growth are PIRE, PIBA, and POTR. On the other hand, the 3 species with the slowest growth are QURU, LALA, and THOC\nHere is an image of each the fastest growing species:\n\n\n\nPIBA\n\n\n\n\n\nPIRE\n\n\n\n\n\nPOTR"
  }
]